version: "3.9"

services:
  redis:
    image: redis:alpine
    container_name: redis
  # ----------------------------------------------------------------------------
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    container_name: postgres_db
  # ----------------------------------------------------------------------------
  migrations:
    image: app:django
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_HOST=db
      - POSTGRES_DATABASE_PORT=5432
    env_file:
      - .env
    command: >
      bash -c "
        sleep 25 && python manage.py migrate"
    depends_on:
      - db
  #  ---------------------------------------------------------------------------
  superuser:
    image: app:django
    command: >
      bash -c "
        sleep 30 && python manage.py createsuperuser --no-input"
    environment:
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_PASSWORD=admin
      - DJANGO_SUPERUSER_EMAIL=admin@admin.com
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_HOST=db
    env_file:
      - .env
    depends_on:
      - db
      - migrations
  #  ---------------------------------------------------------------------------
  rabbit:
    hostname: rabbit
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=mypass
    depends_on:
      - db
    ports:
      - "5672:5672"
      - "15672:15672"
  #  ---------------------------------------------------------------------------
  app:
    build: .
    volumes:
      - .:/django
    ports:
      - 8000:8000
    depends_on:
      - db
    image: app:django
    container_name: django_container
    env_file:
      - .env
    command: >
      bash -c "
        sleep 20 &&
        python manage.py runserver 0.0.0.0:8000"
  # ----------------------------------------------------------------------------
  celery:
    restart: always
    build:
      context: .
    command: celery -A crocheting_store worker -l INFO
    volumes:
      - .:/django
    container_name: celery
    depends_on:
      - db
      - redis
      - rabbit
      - app
